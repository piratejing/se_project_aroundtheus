!function(){"use strict";class e{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=t}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}_setEventListeners(){this._inputEls=[...this._formEl.querySelectorAll(this._inputSelector)],this._submitButton=this._formEl.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputEls.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}}class t{constructor(e,t){let{items:s,renderer:r}=e;this.items=s,this.renderer=r,this.container=document.querySelector(t)}renderItems(){this.items.forEach((e=>this.renderer(e)))}addItem(e){this.container.prepend(e)}}const s=document.querySelector("#profile-edit-button"),r=document.querySelector("#profile-edit-modal"),i=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-title-input")),o=document.querySelector("#profile-description-input"),n=(document.querySelector("#preview-image-modal"),document.querySelector(".modal__preview-image"),document.querySelector(".modal__preview-footer"),r.querySelector(".modal__form"),document.querySelector("#avatar-modal")),a=(document.querySelector("#avatar-modal-form"),document.querySelector(".profile__avatar-edit-btn")),l=(document.querySelector("#delete-card"),document.querySelector(".cards__list"),document.querySelector("#card-template").content.firstElementChild,document.querySelector(".profile__add-button")),d=document.querySelector("#card-edit-modal"),c=d.querySelector(".modal__form"),h=(d.querySelector(".modal__close-button"),c.querySelector("#card-title-input"),c.querySelector("#card-url-input"),{inputSelector:".modal__form-input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_disabled",inputErrorClass:"modal__form-input_error",errorClass:"modal__error_visible",cardSectionClass:".cards__list"});class u{constructor(e){let{popupSelector:t}=e;this._modalElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._modalElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._modalElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){27===e.which&&this.close()}setEventListeners(){this._modalElement.addEventListener("mousedown",(e=>{this._closeModalOnRemoteClick(e)}))}_closeModalOnRemoteClick(e){(e.target===e.currentTarget||e.target.classList.contains("modal__close-button"))&&this.close()}}class _ extends u{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._form=this._modalElement.querySelector(".modal__form"),this._saveButton=this._modalElement.querySelector(".modal__submit-button"),this._handleFormSubmit=s}renderLoading(e,t){this._saveButton.textContent=e?"Saving...":t}_getInputValues(){const e=[...this._modalElement.querySelectorAll(".modal__form-input")],t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}close(){this._form.reset(),super.close()}}const m=new class{constructor(e){this.baseUrl=e.baseUrl,this.headers=e.headers}_processResponse=e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`);getInitialCards(){return fetch(`${this.baseUrl}/cards`,{headers:this.headers}).then(this._processResponse)}getUserInfo(){return fetch(`${this.baseUrl}/users/me`,{headers:this.headers}).then(this._processResponse)}updateProfileInfo(e){let{name:t,about:s}=e;return fetch(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:t,about:s})}).then(this._processResponse)}addCard(e){let{name:t,link:s}=e;return fetch(`${this.baseUrl}/cards`,{method:"POST",headers:this.headers,body:JSON.stringify({name:t,link:s})}).then((e=>e.json()))}deleteCard(e){return fetch(`${this.baseUrl}/cards/${e}`,{method:"DELETE",headers:this.headers}).then(this._processResponse)}addLike(e){return fetch(`${this.baseUrl}/cards/likes/${e}`,{method:"PUT",headers:this.headers,body:JSON.stringify({cardId:e})}).then(this._processResponse)}removeLike(e){return fetch(`${this.baseUrl}/cards/likes/${e}`,{method:"DELETE",headers:this.headers,body:JSON.stringify({cardId:e})}).then(this._processResponse)}updateAvatar(e){return fetch(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e})}).then(this._processResponse)}getApiInfo(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"647a8f04-5b88-450f-8780-5fd992cd87e1","Content-Type":"application/json"}}),p=r.querySelector(".modal__form"),v=d.querySelector(".modal__form"),E=n.querySelector(".modal__form"),S=new e(h,p);S.enableValidation();const f=new e(h,v);f.enableValidation();const b=new e(h,E);b.enableValidation();const L=new _({popupSelector:"#card-edit-modal",handleFormSubmit:function(e){L.renderLoading(!0),m.addCard({name:e.name,link:e.link}).then((e=>{B.addItem(q(e)),L.close()})).catch((e=>{console.log(e)})).finally((()=>{L.renderLoading(!1,"Create")}))}});L.setEventListeners();const g=new _({popupSelector:"#avatar-modal",handleFormSubmit:function(e){g.renderLoading(!0),m.updateAvatar(e.avatar).then((e=>{I.setAvatarInfo({avatar:e.avatar}),g.close()})).catch((e=>{console.log(e)})).finally((()=>{g.renderLoading(!1,"Save")}))}});g.setEventListeners();const y=new _({popupSelector:"#profile-edit-modal",handleFormSubmit:function(e){y.renderLoading(!0),m.updateProfileInfo({name:e.title,about:e.job}).then((e=>{I.setUserInfo({title:e.name,job:e.about}),y.close()})).catch((e=>{console.log(e)})).finally((()=>{y.renderLoading(!1,"Save")}))}});y.setEventListeners();const k=new class extends u{constructor(e){super({popupSelector:e}),this._modalImage=this._modalElement.querySelector(".modal__preview-image"),this._modalTitle=this._modalElement.querySelector(".modal__preview-footer")}open(e,t){super.open(),this._modalImage.src=e.src,this._modalImage.alt=e.alt,this._modalTitle.textContent=t.textContent}}("#preview-image-modal");k.setEventListeners();const C=new class extends u{constructor(e){super({popupSelector:e}),this._confirmButton=this._modalElement.querySelector("#delete-button")}setSubmitAction(e){this._handleSubmit=e}renderLoading(e,t){this._confirmButton.textContent=e?"Deleting...":t}setEventListeners(){super.setEventListeners(),this._confirmButton.addEventListener("click",(e=>{e.preventDefault(),this._handleSubmit()}))}}("#delete-card");C.setEventListeners();const I=new class{constructor(e){let{name:t,job:s,avatar:r}=e;this.name=document.querySelector(t),this.job=document.querySelector(s),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this.name.textContent,job:this.job.textContent}}setUserInfo(e){let{title:t,job:s}=e;this.name.textContent=t,this.job.textContent=s}getAvatarInfo(){return this._avatar}setAvatarInfo(e){let{name:t,avatar:s}=e;this._avatar.src=s,this._avatar.alt=t}}({name:".profile__title",job:".profile__description",avatar:".profile__image"});function q(e){const t=new class{constructor(e,t,s,r,i,o){this._name=e.name,this._link=e.link,this._id=e._id,this._ownerId=e.owner._id,this._likes=e.likes,this._userId=t,this._cardSelector=s,this._handleCardClick=r,this._handleDeleteClick=i,this._handleLikeClick=o}getCardElement(){return this._cardElement=this._getView(),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardTitleEl.textContent=this._name,this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardLikes=this._cardElement.querySelector(".card__likes-counter"),this._renderLikes(),this._userId!=this._ownerId&&this._deleteButton.remove(),this._setEventListeners(),this._cardElement}_setEventListeners(){this._cardImageEl.addEventListener("click",(()=>{this._handleCardClick(this._cardImageEl,this._cardTitleEl)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this._id)})),this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this._id)}))}deleteCard(){this._cardElement.remove(),this.cardElement=null}_addLikes(){this._likeButton.classList.add("card__like-button_active")}_removeLikes(){this._likeButton.classList.remove("card__like-button_active")}setLikes(e){this._likes=e,this._renderLikes()}isLiked(){return this._likes.some((e=>e._id===this._userId))}_renderLikes(){return this._cardLikes.textContent=this._likes.length,this.isLiked()?this._addLikes():this._removeLikes()}_getView(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}}(e,w,"#card-template",((e,t)=>{k.open(e,t)}),(e=>{C.open(),C.setSubmitAction((()=>{C.renderLoading(!0),m.deleteCard(e).then((()=>{t.deleteCard(),C.close()})).catch((e=>console.error(e))).finally((()=>{C.renderLoading(!1,"Yes")}))}))}),(e=>{t.isLiked()?m.removeLike(e).then((e=>{t.setLikes(e.likes)})).catch((e=>{console.log(e)})):m.addLike(e).then((e=>{t.setLikes(e.likes)})).catch((e=>{console.log(e)}))}));return t.getCardElement()}let B,w;s.addEventListener("click",(function(){const e=I.getUserInfo();i.value=e.name,o.value=e.job,y.open(),S.toggleButtonState()})),a.addEventListener("click",(()=>{b.toggleButtonState(),g.open()})),m.getApiInfo().then((e=>{let[s,r]=e;w=s._id,I.setUserInfo({title:s.name,job:s.about}),I.setAvatarInfo({avatar:s.avatar}),B=new t({items:r,renderer:e=>{B.addItem(q(e))}},".cards__list"),B.renderItems()})).catch((e=>{console.log(e)})),l.addEventListener("click",(()=>{L.open(),f.toggleButtonState()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,